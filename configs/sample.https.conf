server {
  listen $mainPort;

  server_name $serviceDomains;
  include conf.d/letsencrypt.inc;
  # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
  return 301 https://$host$request_uri;
}

server {
  listen $sslPort ssl http2;

  ssl_certificate $serviceNginxCert;
  ssl_certificate_key $serviceNginxKey;

  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

  # Diffie-Hellman parameter for DHE ciphersuites
  ssl_dhparam /d2c/ssl/dhparam.pem;

  ssl_protocols $serviceSSLProtocols;
  ssl_ciphers "$serviceSSLCiphers";
  ssl_prefer_server_ciphers on;
  ssl_ecdh_curve secp521r1:secp384r1:prime256v1;

  # HSTS (15768000 seconds = 6 months)
  add_header Strict-Transport-Security max-age=15768000;

  # OCSP Stapling ---
  # fetch OCSP records from URL in ssl_certificate and cache them
  ssl_stapling on;
  ssl_stapling_verify on;

  root /var/www/$serviceName/upload;
  server_name $serviceDomains;
  index index.php index.html;
  resolver 172.17.0.1 valid=60s ipv6=off;
  set $backend $serviceName;
  include conf.d/letsencrypt.inc;
  location ~ /\.git {
    deny all;
  }

  try_files $uri $uri/ @rewrite;
  location @rewrite {
    rewrite ^/(.*)$ /index.php?$args;
  }
  location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|pdf|ppt|txt|bmp|rtf|js|json|tpl|ttf|woff|eot|svg)$ {
    access_log off;
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    expires 30d;
  }
  location ~ \.php$ {
    try_files $fastcgi_script_name =404;
    fastcgi_keep_conn on;
    fastcgi_pass $backend:9000;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
  }
  location ~ /\.ht {
    deny all;
  }
}
